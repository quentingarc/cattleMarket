security:
    password_hashers:
        Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface: 'auto'

    providers:
        in_memory:
            memory:
                users:
                    admin:
                        password: '$2y$13$MXkv8L3o4YZ/iDLKsLMeceLNyNeyoygGheae1qbM4MzuVLusgolH6' # Remplacez ce mot de passe par celui généré après cette étape
                        roles: 'ROLE_ADMIN'

    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false

        backoffice:
            pattern: ^/animal
            http_basic: true
            provider: in_memory

    access_control:
        - { path: ^/animal, roles: ROLE_ADMIN }



when@test:
    security:
        password_hashers:
            # By default, password hashers are resource intensive and take time. This is
            # important to generate secure password hashes. In tests however, secure hashes
            # are not important, waste resources and increase test times. The following
            # reduces the work factor to the lowest possible values.
            Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface:
                algorithm: auto
                cost: 4 # Lowest possible value for bcrypt
                time_cost: 3 # Lowest possible value for argon
                memory_cost: 10 # Lowest possible value for argon
